/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.jd.quant.core.domain.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 新版结果保存（参数为持仓信息与交易详情）
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-15")
public class TQuantSaveResultRequest implements org.apache.thrift.TBase<TQuantSaveResultRequest, TQuantSaveResultRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TQuantSaveResultRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TQuantSaveResultRequest");

  private static final org.apache.thrift.protocol.TField RUNTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("runtime", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TRANSACTION_DETAILS_FIELD_DESC = new org.apache.thrift.protocol.TField("transaction_details", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField TASK_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("task_request", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField INFO_PACKS_FIELD_DESC = new org.apache.thrift.protocol.TField("infoPacks", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField INFOMER_FIELD_DESC = new org.apache.thrift.protocol.TField("infomer", org.apache.thrift.protocol.TType.STRUCT, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TQuantSaveResultRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TQuantSaveResultRequestTupleSchemeFactory();

  public TRuntime runtime; // optional
  public java.util.List<TTransactionDetail> transaction_details; // optional
  public TQuantTaskRequest task_request; // optional
  public TInfoPacks infoPacks; // optional
  public TInformer infomer; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RUNTIME((short)1, "runtime"),
    TRANSACTION_DETAILS((short)2, "transaction_details"),
    TASK_REQUEST((short)3, "task_request"),
    INFO_PACKS((short)4, "infoPacks"),
    INFOMER((short)5, "infomer");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RUNTIME
          return RUNTIME;
        case 2: // TRANSACTION_DETAILS
          return TRANSACTION_DETAILS;
        case 3: // TASK_REQUEST
          return TASK_REQUEST;
        case 4: // INFO_PACKS
          return INFO_PACKS;
        case 5: // INFOMER
          return INFOMER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.RUNTIME,_Fields.TRANSACTION_DETAILS,_Fields.TASK_REQUEST,_Fields.INFO_PACKS,_Fields.INFOMER};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RUNTIME, new org.apache.thrift.meta_data.FieldMetaData("runtime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRuntime.class)));
    tmpMap.put(_Fields.TRANSACTION_DETAILS, new org.apache.thrift.meta_data.FieldMetaData("transaction_details", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TTransactionDetail.class))));
    tmpMap.put(_Fields.TASK_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("task_request", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TQuantTaskRequest.class)));
    tmpMap.put(_Fields.INFO_PACKS, new org.apache.thrift.meta_data.FieldMetaData("infoPacks", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TInfoPacks.class)));
    tmpMap.put(_Fields.INFOMER, new org.apache.thrift.meta_data.FieldMetaData("infomer", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TInformer.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TQuantSaveResultRequest.class, metaDataMap);
  }

  public TQuantSaveResultRequest() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TQuantSaveResultRequest(TQuantSaveResultRequest other) {
    if (other.isSetRuntime()) {
      this.runtime = new TRuntime(other.runtime);
    }
    if (other.isSetTransaction_details()) {
      java.util.List<TTransactionDetail> __this__transaction_details = new java.util.ArrayList<TTransactionDetail>(other.transaction_details.size());
      for (TTransactionDetail other_element : other.transaction_details) {
        __this__transaction_details.add(new TTransactionDetail(other_element));
      }
      this.transaction_details = __this__transaction_details;
    }
    if (other.isSetTask_request()) {
      this.task_request = new TQuantTaskRequest(other.task_request);
    }
    if (other.isSetInfoPacks()) {
      this.infoPacks = new TInfoPacks(other.infoPacks);
    }
    if (other.isSetInfomer()) {
      this.infomer = new TInformer(other.infomer);
    }
  }

  public TQuantSaveResultRequest deepCopy() {
    return new TQuantSaveResultRequest(this);
  }

  @Override
  public void clear() {
    this.runtime = null;
    this.transaction_details = null;
    this.task_request = null;
    this.infoPacks = null;
    this.infomer = null;
  }

  public TRuntime getRuntime() {
    return this.runtime;
  }

  public TQuantSaveResultRequest setRuntime(TRuntime runtime) {
    this.runtime = runtime;
    return this;
  }

  public void unsetRuntime() {
    this.runtime = null;
  }

  /** Returns true if field runtime is set (has been assigned a value) and false otherwise */
  public boolean isSetRuntime() {
    return this.runtime != null;
  }

  public void setRuntimeIsSet(boolean value) {
    if (!value) {
      this.runtime = null;
    }
  }

  public int getTransaction_detailsSize() {
    return (this.transaction_details == null) ? 0 : this.transaction_details.size();
  }

  public java.util.Iterator<TTransactionDetail> getTransaction_detailsIterator() {
    return (this.transaction_details == null) ? null : this.transaction_details.iterator();
  }

  public void addToTransaction_details(TTransactionDetail elem) {
    if (this.transaction_details == null) {
      this.transaction_details = new java.util.ArrayList<TTransactionDetail>();
    }
    this.transaction_details.add(elem);
  }

  public java.util.List<TTransactionDetail> getTransaction_details() {
    return this.transaction_details;
  }

  public TQuantSaveResultRequest setTransaction_details(java.util.List<TTransactionDetail> transaction_details) {
    this.transaction_details = transaction_details;
    return this;
  }

  public void unsetTransaction_details() {
    this.transaction_details = null;
  }

  /** Returns true if field transaction_details is set (has been assigned a value) and false otherwise */
  public boolean isSetTransaction_details() {
    return this.transaction_details != null;
  }

  public void setTransaction_detailsIsSet(boolean value) {
    if (!value) {
      this.transaction_details = null;
    }
  }

  public TQuantTaskRequest getTask_request() {
    return this.task_request;
  }

  public TQuantSaveResultRequest setTask_request(TQuantTaskRequest task_request) {
    this.task_request = task_request;
    return this;
  }

  public void unsetTask_request() {
    this.task_request = null;
  }

  /** Returns true if field task_request is set (has been assigned a value) and false otherwise */
  public boolean isSetTask_request() {
    return this.task_request != null;
  }

  public void setTask_requestIsSet(boolean value) {
    if (!value) {
      this.task_request = null;
    }
  }

  public TInfoPacks getInfoPacks() {
    return this.infoPacks;
  }

  public TQuantSaveResultRequest setInfoPacks(TInfoPacks infoPacks) {
    this.infoPacks = infoPacks;
    return this;
  }

  public void unsetInfoPacks() {
    this.infoPacks = null;
  }

  /** Returns true if field infoPacks is set (has been assigned a value) and false otherwise */
  public boolean isSetInfoPacks() {
    return this.infoPacks != null;
  }

  public void setInfoPacksIsSet(boolean value) {
    if (!value) {
      this.infoPacks = null;
    }
  }

  public TInformer getInfomer() {
    return this.infomer;
  }

  public TQuantSaveResultRequest setInfomer(TInformer infomer) {
    this.infomer = infomer;
    return this;
  }

  public void unsetInfomer() {
    this.infomer = null;
  }

  /** Returns true if field infomer is set (has been assigned a value) and false otherwise */
  public boolean isSetInfomer() {
    return this.infomer != null;
  }

  public void setInfomerIsSet(boolean value) {
    if (!value) {
      this.infomer = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RUNTIME:
      if (value == null) {
        unsetRuntime();
      } else {
        setRuntime((TRuntime)value);
      }
      break;

    case TRANSACTION_DETAILS:
      if (value == null) {
        unsetTransaction_details();
      } else {
        setTransaction_details((java.util.List<TTransactionDetail>)value);
      }
      break;

    case TASK_REQUEST:
      if (value == null) {
        unsetTask_request();
      } else {
        setTask_request((TQuantTaskRequest)value);
      }
      break;

    case INFO_PACKS:
      if (value == null) {
        unsetInfoPacks();
      } else {
        setInfoPacks((TInfoPacks)value);
      }
      break;

    case INFOMER:
      if (value == null) {
        unsetInfomer();
      } else {
        setInfomer((TInformer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RUNTIME:
      return getRuntime();

    case TRANSACTION_DETAILS:
      return getTransaction_details();

    case TASK_REQUEST:
      return getTask_request();

    case INFO_PACKS:
      return getInfoPacks();

    case INFOMER:
      return getInfomer();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RUNTIME:
      return isSetRuntime();
    case TRANSACTION_DETAILS:
      return isSetTransaction_details();
    case TASK_REQUEST:
      return isSetTask_request();
    case INFO_PACKS:
      return isSetInfoPacks();
    case INFOMER:
      return isSetInfomer();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TQuantSaveResultRequest)
      return this.equals((TQuantSaveResultRequest)that);
    return false;
  }

  public boolean equals(TQuantSaveResultRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_runtime = true && this.isSetRuntime();
    boolean that_present_runtime = true && that.isSetRuntime();
    if (this_present_runtime || that_present_runtime) {
      if (!(this_present_runtime && that_present_runtime))
        return false;
      if (!this.runtime.equals(that.runtime))
        return false;
    }

    boolean this_present_transaction_details = true && this.isSetTransaction_details();
    boolean that_present_transaction_details = true && that.isSetTransaction_details();
    if (this_present_transaction_details || that_present_transaction_details) {
      if (!(this_present_transaction_details && that_present_transaction_details))
        return false;
      if (!this.transaction_details.equals(that.transaction_details))
        return false;
    }

    boolean this_present_task_request = true && this.isSetTask_request();
    boolean that_present_task_request = true && that.isSetTask_request();
    if (this_present_task_request || that_present_task_request) {
      if (!(this_present_task_request && that_present_task_request))
        return false;
      if (!this.task_request.equals(that.task_request))
        return false;
    }

    boolean this_present_infoPacks = true && this.isSetInfoPacks();
    boolean that_present_infoPacks = true && that.isSetInfoPacks();
    if (this_present_infoPacks || that_present_infoPacks) {
      if (!(this_present_infoPacks && that_present_infoPacks))
        return false;
      if (!this.infoPacks.equals(that.infoPacks))
        return false;
    }

    boolean this_present_infomer = true && this.isSetInfomer();
    boolean that_present_infomer = true && that.isSetInfomer();
    if (this_present_infomer || that_present_infomer) {
      if (!(this_present_infomer && that_present_infomer))
        return false;
      if (!this.infomer.equals(that.infomer))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetRuntime()) ? 131071 : 524287);
    if (isSetRuntime())
      hashCode = hashCode * 8191 + runtime.hashCode();

    hashCode = hashCode * 8191 + ((isSetTransaction_details()) ? 131071 : 524287);
    if (isSetTransaction_details())
      hashCode = hashCode * 8191 + transaction_details.hashCode();

    hashCode = hashCode * 8191 + ((isSetTask_request()) ? 131071 : 524287);
    if (isSetTask_request())
      hashCode = hashCode * 8191 + task_request.hashCode();

    hashCode = hashCode * 8191 + ((isSetInfoPacks()) ? 131071 : 524287);
    if (isSetInfoPacks())
      hashCode = hashCode * 8191 + infoPacks.hashCode();

    hashCode = hashCode * 8191 + ((isSetInfomer()) ? 131071 : 524287);
    if (isSetInfomer())
      hashCode = hashCode * 8191 + infomer.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TQuantSaveResultRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetRuntime()).compareTo(other.isSetRuntime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRuntime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.runtime, other.runtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTransaction_details()).compareTo(other.isSetTransaction_details());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransaction_details()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.transaction_details, other.transaction_details);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTask_request()).compareTo(other.isSetTask_request());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTask_request()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.task_request, other.task_request);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInfoPacks()).compareTo(other.isSetInfoPacks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInfoPacks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.infoPacks, other.infoPacks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInfomer()).compareTo(other.isSetInfomer());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInfomer()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.infomer, other.infomer);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TQuantSaveResultRequest(");
    boolean first = true;

    if (isSetRuntime()) {
      sb.append("runtime:");
      if (this.runtime == null) {
        sb.append("null");
      } else {
        sb.append(this.runtime);
      }
      first = false;
    }
    if (isSetTransaction_details()) {
      if (!first) sb.append(", ");
      sb.append("transaction_details:");
      if (this.transaction_details == null) {
        sb.append("null");
      } else {
        sb.append(this.transaction_details);
      }
      first = false;
    }
    if (isSetTask_request()) {
      if (!first) sb.append(", ");
      sb.append("task_request:");
      if (this.task_request == null) {
        sb.append("null");
      } else {
        sb.append(this.task_request);
      }
      first = false;
    }
    if (isSetInfoPacks()) {
      if (!first) sb.append(", ");
      sb.append("infoPacks:");
      if (this.infoPacks == null) {
        sb.append("null");
      } else {
        sb.append(this.infoPacks);
      }
      first = false;
    }
    if (isSetInfomer()) {
      if (!first) sb.append(", ");
      sb.append("infomer:");
      if (this.infomer == null) {
        sb.append("null");
      } else {
        sb.append(this.infomer);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (runtime != null) {
      runtime.validate();
    }
    if (task_request != null) {
      task_request.validate();
    }
    if (infoPacks != null) {
      infoPacks.validate();
    }
    if (infomer != null) {
      infomer.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TQuantSaveResultRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TQuantSaveResultRequestStandardScheme getScheme() {
      return new TQuantSaveResultRequestStandardScheme();
    }
  }

  private static class TQuantSaveResultRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<TQuantSaveResultRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TQuantSaveResultRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RUNTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.runtime = new TRuntime();
              struct.runtime.read(iprot);
              struct.setRuntimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TRANSACTION_DETAILS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list102 = iprot.readListBegin();
                struct.transaction_details = new java.util.ArrayList<TTransactionDetail>(_list102.size);
                TTransactionDetail _elem103;
                for (int _i104 = 0; _i104 < _list102.size; ++_i104)
                {
                  _elem103 = new TTransactionDetail();
                  _elem103.read(iprot);
                  struct.transaction_details.add(_elem103);
                }
                iprot.readListEnd();
              }
              struct.setTransaction_detailsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TASK_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.task_request = new TQuantTaskRequest();
              struct.task_request.read(iprot);
              struct.setTask_requestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // INFO_PACKS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.infoPacks = new TInfoPacks();
              struct.infoPacks.read(iprot);
              struct.setInfoPacksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INFOMER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.infomer = new TInformer();
              struct.infomer.read(iprot);
              struct.setInfomerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TQuantSaveResultRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.runtime != null) {
        if (struct.isSetRuntime()) {
          oprot.writeFieldBegin(RUNTIME_FIELD_DESC);
          struct.runtime.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.transaction_details != null) {
        if (struct.isSetTransaction_details()) {
          oprot.writeFieldBegin(TRANSACTION_DETAILS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.transaction_details.size()));
            for (TTransactionDetail _iter105 : struct.transaction_details)
            {
              _iter105.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.task_request != null) {
        if (struct.isSetTask_request()) {
          oprot.writeFieldBegin(TASK_REQUEST_FIELD_DESC);
          struct.task_request.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.infoPacks != null) {
        if (struct.isSetInfoPacks()) {
          oprot.writeFieldBegin(INFO_PACKS_FIELD_DESC);
          struct.infoPacks.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.infomer != null) {
        if (struct.isSetInfomer()) {
          oprot.writeFieldBegin(INFOMER_FIELD_DESC);
          struct.infomer.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TQuantSaveResultRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TQuantSaveResultRequestTupleScheme getScheme() {
      return new TQuantSaveResultRequestTupleScheme();
    }
  }

  private static class TQuantSaveResultRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<TQuantSaveResultRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TQuantSaveResultRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetRuntime()) {
        optionals.set(0);
      }
      if (struct.isSetTransaction_details()) {
        optionals.set(1);
      }
      if (struct.isSetTask_request()) {
        optionals.set(2);
      }
      if (struct.isSetInfoPacks()) {
        optionals.set(3);
      }
      if (struct.isSetInfomer()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetRuntime()) {
        struct.runtime.write(oprot);
      }
      if (struct.isSetTransaction_details()) {
        {
          oprot.writeI32(struct.transaction_details.size());
          for (TTransactionDetail _iter106 : struct.transaction_details)
          {
            _iter106.write(oprot);
          }
        }
      }
      if (struct.isSetTask_request()) {
        struct.task_request.write(oprot);
      }
      if (struct.isSetInfoPacks()) {
        struct.infoPacks.write(oprot);
      }
      if (struct.isSetInfomer()) {
        struct.infomer.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TQuantSaveResultRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.runtime = new TRuntime();
        struct.runtime.read(iprot);
        struct.setRuntimeIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list107 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.transaction_details = new java.util.ArrayList<TTransactionDetail>(_list107.size);
          TTransactionDetail _elem108;
          for (int _i109 = 0; _i109 < _list107.size; ++_i109)
          {
            _elem108 = new TTransactionDetail();
            _elem108.read(iprot);
            struct.transaction_details.add(_elem108);
          }
        }
        struct.setTransaction_detailsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.task_request = new TQuantTaskRequest();
        struct.task_request.read(iprot);
        struct.setTask_requestIsSet(true);
      }
      if (incoming.get(3)) {
        struct.infoPacks = new TInfoPacks();
        struct.infoPacks.read(iprot);
        struct.setInfoPacksIsSet(true);
      }
      if (incoming.get(4)) {
        struct.infomer = new TInformer();
        struct.infomer.read(iprot);
        struct.setInfomerIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

