/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.jd.quant.core.domain.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 结果保存请求结构
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-15")
public class TQuantSaveResultTaskRequest implements org.apache.thrift.TBase<TQuantSaveResultTaskRequest, TQuantSaveResultTaskRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TQuantSaveResultTaskRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TQuantSaveResultTaskRequest");

  private static final org.apache.thrift.protocol.TField USER_PIN_FIELD_DESC = new org.apache.thrift.protocol.TField("userPin", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField STRATEGY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("strategyId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField INITIAL_CASH_FIELD_DESC = new org.apache.thrift.protocol.TField("initialCash", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField REGRESSION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("regressionType", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REQUEST_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("requestTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField RUN_END_FIELD_DESC = new org.apache.thrift.protocol.TField("runEnd", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField DAY_PROFITS_FIELD_DESC = new org.apache.thrift.protocol.TField("dayProfits", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("startDate", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("endDate", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField RUN_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("runType", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField SMART_INVEST_FIELD_DESC = new org.apache.thrift.protocol.TField("smartInvest", org.apache.thrift.protocol.TType.BOOL, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TQuantSaveResultTaskRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TQuantSaveResultTaskRequestTupleSchemeFactory();

  public String userPin; // optional
  public long strategyId; // optional
  public double initialCash; // optional
  public String regressionType; // optional
  public long requestTime; // optional
  public boolean runEnd; // optional
  public java.util.List<TDayProfit> dayProfits; // optional
  public String startDate; // optional
  public String endDate; // optional
  public int runType; // optional
  public boolean smartInvest; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER_PIN((short)1, "userPin"),
    STRATEGY_ID((short)2, "strategyId"),
    INITIAL_CASH((short)3, "initialCash"),
    REGRESSION_TYPE((short)4, "regressionType"),
    REQUEST_TIME((short)5, "requestTime"),
    RUN_END((short)6, "runEnd"),
    DAY_PROFITS((short)7, "dayProfits"),
    START_DATE((short)8, "startDate"),
    END_DATE((short)9, "endDate"),
    RUN_TYPE((short)10, "runType"),
    SMART_INVEST((short)11, "smartInvest");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_PIN
          return USER_PIN;
        case 2: // STRATEGY_ID
          return STRATEGY_ID;
        case 3: // INITIAL_CASH
          return INITIAL_CASH;
        case 4: // REGRESSION_TYPE
          return REGRESSION_TYPE;
        case 5: // REQUEST_TIME
          return REQUEST_TIME;
        case 6: // RUN_END
          return RUN_END;
        case 7: // DAY_PROFITS
          return DAY_PROFITS;
        case 8: // START_DATE
          return START_DATE;
        case 9: // END_DATE
          return END_DATE;
        case 10: // RUN_TYPE
          return RUN_TYPE;
        case 11: // SMART_INVEST
          return SMART_INVEST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STRATEGYID_ISSET_ID = 0;
  private static final int __INITIALCASH_ISSET_ID = 1;
  private static final int __REQUESTTIME_ISSET_ID = 2;
  private static final int __RUNEND_ISSET_ID = 3;
  private static final int __RUNTYPE_ISSET_ID = 4;
  private static final int __SMARTINVEST_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.USER_PIN,_Fields.STRATEGY_ID,_Fields.INITIAL_CASH,_Fields.REGRESSION_TYPE,_Fields.REQUEST_TIME,_Fields.RUN_END,_Fields.DAY_PROFITS,_Fields.START_DATE,_Fields.END_DATE,_Fields.RUN_TYPE,_Fields.SMART_INVEST};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_PIN, new org.apache.thrift.meta_data.FieldMetaData("userPin", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRATEGY_ID, new org.apache.thrift.meta_data.FieldMetaData("strategyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INITIAL_CASH, new org.apache.thrift.meta_data.FieldMetaData("initialCash", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REGRESSION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("regressionType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_TIME, new org.apache.thrift.meta_data.FieldMetaData("requestTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RUN_END, new org.apache.thrift.meta_data.FieldMetaData("runEnd", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DAY_PROFITS, new org.apache.thrift.meta_data.FieldMetaData("dayProfits", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDayProfit.class))));
    tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("startDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("endDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RUN_TYPE, new org.apache.thrift.meta_data.FieldMetaData("runType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SMART_INVEST, new org.apache.thrift.meta_data.FieldMetaData("smartInvest", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TQuantSaveResultTaskRequest.class, metaDataMap);
  }

  public TQuantSaveResultTaskRequest() {
    this.smartInvest = false;

  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TQuantSaveResultTaskRequest(TQuantSaveResultTaskRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUserPin()) {
      this.userPin = other.userPin;
    }
    this.strategyId = other.strategyId;
    this.initialCash = other.initialCash;
    if (other.isSetRegressionType()) {
      this.regressionType = other.regressionType;
    }
    this.requestTime = other.requestTime;
    this.runEnd = other.runEnd;
    if (other.isSetDayProfits()) {
      java.util.List<TDayProfit> __this__dayProfits = new java.util.ArrayList<TDayProfit>(other.dayProfits.size());
      for (TDayProfit other_element : other.dayProfits) {
        __this__dayProfits.add(new TDayProfit(other_element));
      }
      this.dayProfits = __this__dayProfits;
    }
    if (other.isSetStartDate()) {
      this.startDate = other.startDate;
    }
    if (other.isSetEndDate()) {
      this.endDate = other.endDate;
    }
    this.runType = other.runType;
    this.smartInvest = other.smartInvest;
  }

  public TQuantSaveResultTaskRequest deepCopy() {
    return new TQuantSaveResultTaskRequest(this);
  }

  @Override
  public void clear() {
    this.userPin = null;
    setStrategyIdIsSet(false);
    this.strategyId = 0;
    setInitialCashIsSet(false);
    this.initialCash = 0.0;
    this.regressionType = null;
    setRequestTimeIsSet(false);
    this.requestTime = 0;
    setRunEndIsSet(false);
    this.runEnd = false;
    this.dayProfits = null;
    this.startDate = null;
    this.endDate = null;
    setRunTypeIsSet(false);
    this.runType = 0;
    this.smartInvest = false;

  }

  public String getUserPin() {
    return this.userPin;
  }

  public TQuantSaveResultTaskRequest setUserPin(String userPin) {
    this.userPin = userPin;
    return this;
  }

  public void unsetUserPin() {
    this.userPin = null;
  }

  /** Returns true if field userPin is set (has been assigned a value) and false otherwise */
  public boolean isSetUserPin() {
    return this.userPin != null;
  }

  public void setUserPinIsSet(boolean value) {
    if (!value) {
      this.userPin = null;
    }
  }

  public long getStrategyId() {
    return this.strategyId;
  }

  public TQuantSaveResultTaskRequest setStrategyId(long strategyId) {
    this.strategyId = strategyId;
    setStrategyIdIsSet(true);
    return this;
  }

  public void unsetStrategyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STRATEGYID_ISSET_ID);
  }

  /** Returns true if field strategyId is set (has been assigned a value) and false otherwise */
  public boolean isSetStrategyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STRATEGYID_ISSET_ID);
  }

  public void setStrategyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STRATEGYID_ISSET_ID, value);
  }

  public double getInitialCash() {
    return this.initialCash;
  }

  public TQuantSaveResultTaskRequest setInitialCash(double initialCash) {
    this.initialCash = initialCash;
    setInitialCashIsSet(true);
    return this;
  }

  public void unsetInitialCash() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INITIALCASH_ISSET_ID);
  }

  /** Returns true if field initialCash is set (has been assigned a value) and false otherwise */
  public boolean isSetInitialCash() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INITIALCASH_ISSET_ID);
  }

  public void setInitialCashIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INITIALCASH_ISSET_ID, value);
  }

  public String getRegressionType() {
    return this.regressionType;
  }

  public TQuantSaveResultTaskRequest setRegressionType(String regressionType) {
    this.regressionType = regressionType;
    return this;
  }

  public void unsetRegressionType() {
    this.regressionType = null;
  }

  /** Returns true if field regressionType is set (has been assigned a value) and false otherwise */
  public boolean isSetRegressionType() {
    return this.regressionType != null;
  }

  public void setRegressionTypeIsSet(boolean value) {
    if (!value) {
      this.regressionType = null;
    }
  }

  public long getRequestTime() {
    return this.requestTime;
  }

  public TQuantSaveResultTaskRequest setRequestTime(long requestTime) {
    this.requestTime = requestTime;
    setRequestTimeIsSet(true);
    return this;
  }

  public void unsetRequestTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REQUESTTIME_ISSET_ID);
  }

  /** Returns true if field requestTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REQUESTTIME_ISSET_ID);
  }

  public void setRequestTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REQUESTTIME_ISSET_ID, value);
  }

  public boolean isRunEnd() {
    return this.runEnd;
  }

  public TQuantSaveResultTaskRequest setRunEnd(boolean runEnd) {
    this.runEnd = runEnd;
    setRunEndIsSet(true);
    return this;
  }

  public void unsetRunEnd() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RUNEND_ISSET_ID);
  }

  /** Returns true if field runEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetRunEnd() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RUNEND_ISSET_ID);
  }

  public void setRunEndIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RUNEND_ISSET_ID, value);
  }

  public int getDayProfitsSize() {
    return (this.dayProfits == null) ? 0 : this.dayProfits.size();
  }

  public java.util.Iterator<TDayProfit> getDayProfitsIterator() {
    return (this.dayProfits == null) ? null : this.dayProfits.iterator();
  }

  public void addToDayProfits(TDayProfit elem) {
    if (this.dayProfits == null) {
      this.dayProfits = new java.util.ArrayList<TDayProfit>();
    }
    this.dayProfits.add(elem);
  }

  public java.util.List<TDayProfit> getDayProfits() {
    return this.dayProfits;
  }

  public TQuantSaveResultTaskRequest setDayProfits(java.util.List<TDayProfit> dayProfits) {
    this.dayProfits = dayProfits;
    return this;
  }

  public void unsetDayProfits() {
    this.dayProfits = null;
  }

  /** Returns true if field dayProfits is set (has been assigned a value) and false otherwise */
  public boolean isSetDayProfits() {
    return this.dayProfits != null;
  }

  public void setDayProfitsIsSet(boolean value) {
    if (!value) {
      this.dayProfits = null;
    }
  }

  public String getStartDate() {
    return this.startDate;
  }

  public TQuantSaveResultTaskRequest setStartDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  public void unsetStartDate() {
    this.startDate = null;
  }

  /** Returns true if field startDate is set (has been assigned a value) and false otherwise */
  public boolean isSetStartDate() {
    return this.startDate != null;
  }

  public void setStartDateIsSet(boolean value) {
    if (!value) {
      this.startDate = null;
    }
  }

  public String getEndDate() {
    return this.endDate;
  }

  public TQuantSaveResultTaskRequest setEndDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  public void unsetEndDate() {
    this.endDate = null;
  }

  /** Returns true if field endDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDate() {
    return this.endDate != null;
  }

  public void setEndDateIsSet(boolean value) {
    if (!value) {
      this.endDate = null;
    }
  }

  public int getRunType() {
    return this.runType;
  }

  public TQuantSaveResultTaskRequest setRunType(int runType) {
    this.runType = runType;
    setRunTypeIsSet(true);
    return this;
  }

  public void unsetRunType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RUNTYPE_ISSET_ID);
  }

  /** Returns true if field runType is set (has been assigned a value) and false otherwise */
  public boolean isSetRunType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RUNTYPE_ISSET_ID);
  }

  public void setRunTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RUNTYPE_ISSET_ID, value);
  }

  public boolean isSmartInvest() {
    return this.smartInvest;
  }

  public TQuantSaveResultTaskRequest setSmartInvest(boolean smartInvest) {
    this.smartInvest = smartInvest;
    setSmartInvestIsSet(true);
    return this;
  }

  public void unsetSmartInvest() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SMARTINVEST_ISSET_ID);
  }

  /** Returns true if field smartInvest is set (has been assigned a value) and false otherwise */
  public boolean isSetSmartInvest() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SMARTINVEST_ISSET_ID);
  }

  public void setSmartInvestIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SMARTINVEST_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER_PIN:
      if (value == null) {
        unsetUserPin();
      } else {
        setUserPin((String)value);
      }
      break;

    case STRATEGY_ID:
      if (value == null) {
        unsetStrategyId();
      } else {
        setStrategyId((Long)value);
      }
      break;

    case INITIAL_CASH:
      if (value == null) {
        unsetInitialCash();
      } else {
        setInitialCash((Double)value);
      }
      break;

    case REGRESSION_TYPE:
      if (value == null) {
        unsetRegressionType();
      } else {
        setRegressionType((String)value);
      }
      break;

    case REQUEST_TIME:
      if (value == null) {
        unsetRequestTime();
      } else {
        setRequestTime((Long)value);
      }
      break;

    case RUN_END:
      if (value == null) {
        unsetRunEnd();
      } else {
        setRunEnd((Boolean)value);
      }
      break;

    case DAY_PROFITS:
      if (value == null) {
        unsetDayProfits();
      } else {
        setDayProfits((java.util.List<TDayProfit>)value);
      }
      break;

    case START_DATE:
      if (value == null) {
        unsetStartDate();
      } else {
        setStartDate((String)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEndDate();
      } else {
        setEndDate((String)value);
      }
      break;

    case RUN_TYPE:
      if (value == null) {
        unsetRunType();
      } else {
        setRunType((Integer)value);
      }
      break;

    case SMART_INVEST:
      if (value == null) {
        unsetSmartInvest();
      } else {
        setSmartInvest((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_PIN:
      return getUserPin();

    case STRATEGY_ID:
      return getStrategyId();

    case INITIAL_CASH:
      return getInitialCash();

    case REGRESSION_TYPE:
      return getRegressionType();

    case REQUEST_TIME:
      return getRequestTime();

    case RUN_END:
      return isRunEnd();

    case DAY_PROFITS:
      return getDayProfits();

    case START_DATE:
      return getStartDate();

    case END_DATE:
      return getEndDate();

    case RUN_TYPE:
      return getRunType();

    case SMART_INVEST:
      return isSmartInvest();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER_PIN:
      return isSetUserPin();
    case STRATEGY_ID:
      return isSetStrategyId();
    case INITIAL_CASH:
      return isSetInitialCash();
    case REGRESSION_TYPE:
      return isSetRegressionType();
    case REQUEST_TIME:
      return isSetRequestTime();
    case RUN_END:
      return isSetRunEnd();
    case DAY_PROFITS:
      return isSetDayProfits();
    case START_DATE:
      return isSetStartDate();
    case END_DATE:
      return isSetEndDate();
    case RUN_TYPE:
      return isSetRunType();
    case SMART_INVEST:
      return isSetSmartInvest();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TQuantSaveResultTaskRequest)
      return this.equals((TQuantSaveResultTaskRequest)that);
    return false;
  }

  public boolean equals(TQuantSaveResultTaskRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_userPin = true && this.isSetUserPin();
    boolean that_present_userPin = true && that.isSetUserPin();
    if (this_present_userPin || that_present_userPin) {
      if (!(this_present_userPin && that_present_userPin))
        return false;
      if (!this.userPin.equals(that.userPin))
        return false;
    }

    boolean this_present_strategyId = true && this.isSetStrategyId();
    boolean that_present_strategyId = true && that.isSetStrategyId();
    if (this_present_strategyId || that_present_strategyId) {
      if (!(this_present_strategyId && that_present_strategyId))
        return false;
      if (this.strategyId != that.strategyId)
        return false;
    }

    boolean this_present_initialCash = true && this.isSetInitialCash();
    boolean that_present_initialCash = true && that.isSetInitialCash();
    if (this_present_initialCash || that_present_initialCash) {
      if (!(this_present_initialCash && that_present_initialCash))
        return false;
      if (this.initialCash != that.initialCash)
        return false;
    }

    boolean this_present_regressionType = true && this.isSetRegressionType();
    boolean that_present_regressionType = true && that.isSetRegressionType();
    if (this_present_regressionType || that_present_regressionType) {
      if (!(this_present_regressionType && that_present_regressionType))
        return false;
      if (!this.regressionType.equals(that.regressionType))
        return false;
    }

    boolean this_present_requestTime = true && this.isSetRequestTime();
    boolean that_present_requestTime = true && that.isSetRequestTime();
    if (this_present_requestTime || that_present_requestTime) {
      if (!(this_present_requestTime && that_present_requestTime))
        return false;
      if (this.requestTime != that.requestTime)
        return false;
    }

    boolean this_present_runEnd = true && this.isSetRunEnd();
    boolean that_present_runEnd = true && that.isSetRunEnd();
    if (this_present_runEnd || that_present_runEnd) {
      if (!(this_present_runEnd && that_present_runEnd))
        return false;
      if (this.runEnd != that.runEnd)
        return false;
    }

    boolean this_present_dayProfits = true && this.isSetDayProfits();
    boolean that_present_dayProfits = true && that.isSetDayProfits();
    if (this_present_dayProfits || that_present_dayProfits) {
      if (!(this_present_dayProfits && that_present_dayProfits))
        return false;
      if (!this.dayProfits.equals(that.dayProfits))
        return false;
    }

    boolean this_present_startDate = true && this.isSetStartDate();
    boolean that_present_startDate = true && that.isSetStartDate();
    if (this_present_startDate || that_present_startDate) {
      if (!(this_present_startDate && that_present_startDate))
        return false;
      if (!this.startDate.equals(that.startDate))
        return false;
    }

    boolean this_present_endDate = true && this.isSetEndDate();
    boolean that_present_endDate = true && that.isSetEndDate();
    if (this_present_endDate || that_present_endDate) {
      if (!(this_present_endDate && that_present_endDate))
        return false;
      if (!this.endDate.equals(that.endDate))
        return false;
    }

    boolean this_present_runType = true && this.isSetRunType();
    boolean that_present_runType = true && that.isSetRunType();
    if (this_present_runType || that_present_runType) {
      if (!(this_present_runType && that_present_runType))
        return false;
      if (this.runType != that.runType)
        return false;
    }

    boolean this_present_smartInvest = true && this.isSetSmartInvest();
    boolean that_present_smartInvest = true && that.isSetSmartInvest();
    if (this_present_smartInvest || that_present_smartInvest) {
      if (!(this_present_smartInvest && that_present_smartInvest))
        return false;
      if (this.smartInvest != that.smartInvest)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUserPin()) ? 131071 : 524287);
    if (isSetUserPin())
      hashCode = hashCode * 8191 + userPin.hashCode();

    hashCode = hashCode * 8191 + ((isSetStrategyId()) ? 131071 : 524287);
    if (isSetStrategyId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(strategyId);

    hashCode = hashCode * 8191 + ((isSetInitialCash()) ? 131071 : 524287);
    if (isSetInitialCash())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(initialCash);

    hashCode = hashCode * 8191 + ((isSetRegressionType()) ? 131071 : 524287);
    if (isSetRegressionType())
      hashCode = hashCode * 8191 + regressionType.hashCode();

    hashCode = hashCode * 8191 + ((isSetRequestTime()) ? 131071 : 524287);
    if (isSetRequestTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(requestTime);

    hashCode = hashCode * 8191 + ((isSetRunEnd()) ? 131071 : 524287);
    if (isSetRunEnd())
      hashCode = hashCode * 8191 + ((runEnd) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetDayProfits()) ? 131071 : 524287);
    if (isSetDayProfits())
      hashCode = hashCode * 8191 + dayProfits.hashCode();

    hashCode = hashCode * 8191 + ((isSetStartDate()) ? 131071 : 524287);
    if (isSetStartDate())
      hashCode = hashCode * 8191 + startDate.hashCode();

    hashCode = hashCode * 8191 + ((isSetEndDate()) ? 131071 : 524287);
    if (isSetEndDate())
      hashCode = hashCode * 8191 + endDate.hashCode();

    hashCode = hashCode * 8191 + ((isSetRunType()) ? 131071 : 524287);
    if (isSetRunType())
      hashCode = hashCode * 8191 + runType;

    hashCode = hashCode * 8191 + ((isSetSmartInvest()) ? 131071 : 524287);
    if (isSetSmartInvest())
      hashCode = hashCode * 8191 + ((smartInvest) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(TQuantSaveResultTaskRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUserPin()).compareTo(other.isSetUserPin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserPin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userPin, other.userPin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStrategyId()).compareTo(other.isSetStrategyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStrategyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.strategyId, other.strategyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInitialCash()).compareTo(other.isSetInitialCash());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInitialCash()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.initialCash, other.initialCash);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegressionType()).compareTo(other.isSetRegressionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegressionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regressionType, other.regressionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestTime()).compareTo(other.isSetRequestTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestTime, other.requestTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRunEnd()).compareTo(other.isSetRunEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRunEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.runEnd, other.runEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDayProfits()).compareTo(other.isSetDayProfits());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayProfits()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dayProfits, other.dayProfits);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartDate()).compareTo(other.isSetStartDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startDate, other.startDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDate()).compareTo(other.isSetEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDate, other.endDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRunType()).compareTo(other.isSetRunType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRunType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.runType, other.runType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSmartInvest()).compareTo(other.isSetSmartInvest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSmartInvest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.smartInvest, other.smartInvest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TQuantSaveResultTaskRequest(");
    boolean first = true;

    if (isSetUserPin()) {
      sb.append("userPin:");
      if (this.userPin == null) {
        sb.append("null");
      } else {
        sb.append(this.userPin);
      }
      first = false;
    }
    if (isSetStrategyId()) {
      if (!first) sb.append(", ");
      sb.append("strategyId:");
      sb.append(this.strategyId);
      first = false;
    }
    if (isSetInitialCash()) {
      if (!first) sb.append(", ");
      sb.append("initialCash:");
      sb.append(this.initialCash);
      first = false;
    }
    if (isSetRegressionType()) {
      if (!first) sb.append(", ");
      sb.append("regressionType:");
      if (this.regressionType == null) {
        sb.append("null");
      } else {
        sb.append(this.regressionType);
      }
      first = false;
    }
    if (isSetRequestTime()) {
      if (!first) sb.append(", ");
      sb.append("requestTime:");
      sb.append(this.requestTime);
      first = false;
    }
    if (isSetRunEnd()) {
      if (!first) sb.append(", ");
      sb.append("runEnd:");
      sb.append(this.runEnd);
      first = false;
    }
    if (isSetDayProfits()) {
      if (!first) sb.append(", ");
      sb.append("dayProfits:");
      if (this.dayProfits == null) {
        sb.append("null");
      } else {
        sb.append(this.dayProfits);
      }
      first = false;
    }
    if (isSetStartDate()) {
      if (!first) sb.append(", ");
      sb.append("startDate:");
      if (this.startDate == null) {
        sb.append("null");
      } else {
        sb.append(this.startDate);
      }
      first = false;
    }
    if (isSetEndDate()) {
      if (!first) sb.append(", ");
      sb.append("endDate:");
      if (this.endDate == null) {
        sb.append("null");
      } else {
        sb.append(this.endDate);
      }
      first = false;
    }
    if (isSetRunType()) {
      if (!first) sb.append(", ");
      sb.append("runType:");
      sb.append(this.runType);
      first = false;
    }
    if (isSetSmartInvest()) {
      if (!first) sb.append(", ");
      sb.append("smartInvest:");
      sb.append(this.smartInvest);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TQuantSaveResultTaskRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TQuantSaveResultTaskRequestStandardScheme getScheme() {
      return new TQuantSaveResultTaskRequestStandardScheme();
    }
  }

  private static class TQuantSaveResultTaskRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<TQuantSaveResultTaskRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TQuantSaveResultTaskRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_PIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userPin = iprot.readString();
              struct.setUserPinIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STRATEGY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.strategyId = iprot.readI64();
              struct.setStrategyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INITIAL_CASH
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.initialCash = iprot.readDouble();
              struct.setInitialCashIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REGRESSION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regressionType = iprot.readString();
              struct.setRegressionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REQUEST_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.requestTime = iprot.readI64();
              struct.setRequestTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RUN_END
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.runEnd = iprot.readBool();
              struct.setRunEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DAY_PROFITS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list68 = iprot.readListBegin();
                struct.dayProfits = new java.util.ArrayList<TDayProfit>(_list68.size);
                TDayProfit _elem69;
                for (int _i70 = 0; _i70 < _list68.size; ++_i70)
                {
                  _elem69 = new TDayProfit();
                  _elem69.read(iprot);
                  struct.dayProfits.add(_elem69);
                }
                iprot.readListEnd();
              }
              struct.setDayProfitsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startDate = iprot.readString();
              struct.setStartDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endDate = iprot.readString();
              struct.setEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // RUN_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.runType = iprot.readI32();
              struct.setRunTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SMART_INVEST
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.smartInvest = iprot.readBool();
              struct.setSmartInvestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TQuantSaveResultTaskRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.userPin != null) {
        if (struct.isSetUserPin()) {
          oprot.writeFieldBegin(USER_PIN_FIELD_DESC);
          oprot.writeString(struct.userPin);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStrategyId()) {
        oprot.writeFieldBegin(STRATEGY_ID_FIELD_DESC);
        oprot.writeI64(struct.strategyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInitialCash()) {
        oprot.writeFieldBegin(INITIAL_CASH_FIELD_DESC);
        oprot.writeDouble(struct.initialCash);
        oprot.writeFieldEnd();
      }
      if (struct.regressionType != null) {
        if (struct.isSetRegressionType()) {
          oprot.writeFieldBegin(REGRESSION_TYPE_FIELD_DESC);
          oprot.writeString(struct.regressionType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRequestTime()) {
        oprot.writeFieldBegin(REQUEST_TIME_FIELD_DESC);
        oprot.writeI64(struct.requestTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRunEnd()) {
        oprot.writeFieldBegin(RUN_END_FIELD_DESC);
        oprot.writeBool(struct.runEnd);
        oprot.writeFieldEnd();
      }
      if (struct.dayProfits != null) {
        if (struct.isSetDayProfits()) {
          oprot.writeFieldBegin(DAY_PROFITS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.dayProfits.size()));
            for (TDayProfit _iter71 : struct.dayProfits)
            {
              _iter71.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.startDate != null) {
        if (struct.isSetStartDate()) {
          oprot.writeFieldBegin(START_DATE_FIELD_DESC);
          oprot.writeString(struct.startDate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.endDate != null) {
        if (struct.isSetEndDate()) {
          oprot.writeFieldBegin(END_DATE_FIELD_DESC);
          oprot.writeString(struct.endDate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRunType()) {
        oprot.writeFieldBegin(RUN_TYPE_FIELD_DESC);
        oprot.writeI32(struct.runType);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSmartInvest()) {
        oprot.writeFieldBegin(SMART_INVEST_FIELD_DESC);
        oprot.writeBool(struct.smartInvest);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TQuantSaveResultTaskRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TQuantSaveResultTaskRequestTupleScheme getScheme() {
      return new TQuantSaveResultTaskRequestTupleScheme();
    }
  }

  private static class TQuantSaveResultTaskRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<TQuantSaveResultTaskRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TQuantSaveResultTaskRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUserPin()) {
        optionals.set(0);
      }
      if (struct.isSetStrategyId()) {
        optionals.set(1);
      }
      if (struct.isSetInitialCash()) {
        optionals.set(2);
      }
      if (struct.isSetRegressionType()) {
        optionals.set(3);
      }
      if (struct.isSetRequestTime()) {
        optionals.set(4);
      }
      if (struct.isSetRunEnd()) {
        optionals.set(5);
      }
      if (struct.isSetDayProfits()) {
        optionals.set(6);
      }
      if (struct.isSetStartDate()) {
        optionals.set(7);
      }
      if (struct.isSetEndDate()) {
        optionals.set(8);
      }
      if (struct.isSetRunType()) {
        optionals.set(9);
      }
      if (struct.isSetSmartInvest()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetUserPin()) {
        oprot.writeString(struct.userPin);
      }
      if (struct.isSetStrategyId()) {
        oprot.writeI64(struct.strategyId);
      }
      if (struct.isSetInitialCash()) {
        oprot.writeDouble(struct.initialCash);
      }
      if (struct.isSetRegressionType()) {
        oprot.writeString(struct.regressionType);
      }
      if (struct.isSetRequestTime()) {
        oprot.writeI64(struct.requestTime);
      }
      if (struct.isSetRunEnd()) {
        oprot.writeBool(struct.runEnd);
      }
      if (struct.isSetDayProfits()) {
        {
          oprot.writeI32(struct.dayProfits.size());
          for (TDayProfit _iter72 : struct.dayProfits)
          {
            _iter72.write(oprot);
          }
        }
      }
      if (struct.isSetStartDate()) {
        oprot.writeString(struct.startDate);
      }
      if (struct.isSetEndDate()) {
        oprot.writeString(struct.endDate);
      }
      if (struct.isSetRunType()) {
        oprot.writeI32(struct.runType);
      }
      if (struct.isSetSmartInvest()) {
        oprot.writeBool(struct.smartInvest);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TQuantSaveResultTaskRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.userPin = iprot.readString();
        struct.setUserPinIsSet(true);
      }
      if (incoming.get(1)) {
        struct.strategyId = iprot.readI64();
        struct.setStrategyIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.initialCash = iprot.readDouble();
        struct.setInitialCashIsSet(true);
      }
      if (incoming.get(3)) {
        struct.regressionType = iprot.readString();
        struct.setRegressionTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.requestTime = iprot.readI64();
        struct.setRequestTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.runEnd = iprot.readBool();
        struct.setRunEndIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list73 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.dayProfits = new java.util.ArrayList<TDayProfit>(_list73.size);
          TDayProfit _elem74;
          for (int _i75 = 0; _i75 < _list73.size; ++_i75)
          {
            _elem74 = new TDayProfit();
            _elem74.read(iprot);
            struct.dayProfits.add(_elem74);
          }
        }
        struct.setDayProfitsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.startDate = iprot.readString();
        struct.setStartDateIsSet(true);
      }
      if (incoming.get(8)) {
        struct.endDate = iprot.readString();
        struct.setEndDateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.runType = iprot.readI32();
        struct.setRunTypeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.smartInvest = iprot.readBool();
        struct.setSmartInvestIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

